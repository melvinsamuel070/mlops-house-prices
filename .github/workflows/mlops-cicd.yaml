name: MLOps CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  MLFLOW_TRACKING_URI: http://mlflow:5000
  MODEL_NAME: CaliforniaHousePriceModel
  DOCKER_HUB_USERNAME: melvinsamuel070
  BACKEND_IMAGE: melvinsamuel070/house-price-backend:mlops
  FRONTEND_IMAGE: melvinsamuel070/house-price-frontend:mlops

jobs:
  build-train-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: üß© Checkout repository
      uses: actions/checkout@v4

    - name: üêç Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r backend/requirements.txt

    - name: üß† Train model and log to MLflow
      working-directory: backend
      env:
        MLFLOW_TRACKING_URI: ${{ env.MLFLOW_TRACKING_URI }}
        GITHUB_ACTIONS: true
      run: |
        echo "Starting model training..."
        python train.py
        echo "Training completed and metrics logged to MLflow!"

    # ‚úÖ Upload MLflow logs as artifact (so you can view experiment results)
    - name: üì§ Upload MLflow artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mlflow-runs
        path: backend/../mlruns

    - name: üß± Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: üîê Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: üê≥ Build and push Backend image
      run: |
        docker build -t ${{ env.BACKEND_IMAGE }} ./backend
        docker push ${{ env.BACKEND_IMAGE }}

    - name: üß≠ Build and push Frontend image
      run: |
        docker build -t ${{ env.FRONTEND_IMAGE }} ./frontend
        docker push ${{ env.FRONTEND_IMAGE }}

    # ‚úÖ Optional: Deploy to EC2
    - name: üöÄ Deploy to EC2
      if: github.ref == 'refs/heads/master'
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          cd ~/mlops-house-price
          git pull origin main
          docker compose down
          docker compose pull
          docker compose up -d
          echo "‚úÖ Deployment complete!"
